Test Cases for Open Redirect Fix in Backbone.History

ðŸ”¹ Test Case 1: Safe Same-Origin Redirect
â€¢	Description: Ensure that a same-origin URL is allowed.
â€¢	Input: /dashboard
â€¢	Expected Behavior: location.assign() is called, and redirection occurs.
â€¢	Purpose: Validate that legitimate internal redirects still work after the patch.

ðŸ”¹ Test Case 2: Unsafe External Redirect
â€¢	Description: Block an external redirection attempt.
â€¢	Input: https://evil.com
â€¢	Expected Behavior: Redirect is blocked, location.assign() is not called.
â€¢	Console Output: Blocked unsafe redirect attempt: https://evil.com
â€¢	Purpose: Ensure the patch correctly prevents redirection to external domains.

ðŸ”¹ Test Case 3: Malformed URL
â€¢	Description: Handle invalid/malformed URLs gracefully.
â€¢	Input: http://
â€¢	Expected Behavior: Redirect is blocked, no exception is thrown.
â€¢	Purpose: Ensure that malformed input doesn't crash the app and is properly rejected.

ðŸ”¹ Test Case 4: Empty or Null URL
â€¢	Description: Prevent redirection when URL is null, undefined, or empty.
â€¢	Input: "" or null
â€¢	Expected Behavior: No redirection occurs, function exits silently or logs a warning.
â€¢	Purpose: Catch edge cases that might bypass the redirect logic.

ðŸ”¹ Test Case 5: Redirect with JavaScript URL Scheme
â€¢	Description: Prevent dangerous schemes like javascript:alert(1)
â€¢	Input: javascript:alert(1)
â€¢	Expected Behavior: Redirect is blocked.
â€¢	Purpose: Prevent XSS and ensure scheme validation.

