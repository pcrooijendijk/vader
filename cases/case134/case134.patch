--- a/src/pages/Movies.js
+++ b/src/pages/Movies.js
@@
 import React, { useEffect, useState } from "react";
 import Layout from "../components/Layout";
 import Loader from "../components/Loader";
 import { useNavigate } from "react-router-dom";
 import { collection, getDocs } from "firebase/firestore";
 import { db } from "../fireBase/config";

+const validateImageUrl = (url) => {
+  try {
+    const parsed = new URL(url);
+    return parsed.protocol === 'https:' || parsed.protocol === 'http:';
+  } catch {
+    return false;
+  }
+};
+
+const sanitizeId = (id) => {
+  const pattern = /^[a-zA-Z0-9_-]+$/;
+  return pattern.test(id);
+};

 const Movies = () => {
   const navigate = useNavigate();
-  const [postLists, setPostList] = useState();
+  const [postLists, setPostList] = useState([]);
+  const [error, setError] = useState(false);

   const postCollectionref = collection(db, "movies");
-  const getMovieData = async () => {
-    const data = await getDocs(postCollectionref);
-    setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
-  };
+  
+  const getMovieData = async () => {
+    try {
+      const data = await getDocs(postCollectionref);
+      const sanitizedData = data.docs.map((doc) => ({
+        ...doc.data(),
+        id: doc.id,
+      }));
+      setPostList(sanitizedData);
+    } catch (err) {
+      console.error("Failed to fetch movie data:", err);
+      setError(true);
+    }
+  };

   useEffect(() => {
     getMovieData();
   }, []);

   return (
     <div>
       <Layout title={"Movies"}>
         <div className="details-container">
           <div className="left-details">
             <h1 className="internship-heading">All Movies Data</h1>
             <div className="card-container">
-              {postLists && postLists.length > 0 ? (
-                postLists.map((item) => (
-                  <div className="card" key={item.id}>
-                    <img src={item.url} alt="" />
-                    <h4 className="card-info">{item.title}</h4>
-                    <button
-                      className="l-n-btn"
-                      style={{ backgroundColor: "" }}
-                      onClick={() => navigate(`/movies/${item.id}`)}
-                    >
-                      Open
-                    </button>
-                  </div>
-                ))
-              ) : (
-                <Loader />
-              )}
+              {error ? (
+                <p style={{ color: "red", fontWeight: "bold" }}>
+                  Failed to load movies. Please try again later.
+                </p>
+              ) : postLists.length > 0 ? (
+                postLists.map((item) => (
+                  <div className="card" key={item.id}>
+                    {validateImageUrl(item.url) ? (
+                      <img src={item.url} alt={item.title || "movie poster"} />
+                    ) : (
+                      <div className="image-placeholder">Invalid Image</div>
+                    )}
+                    <h4 className="card-info">{item.title}</h4>
+                    <button
+                      className="l-n-btn"
+                      style={{ backgroundColor: "" }}
+                      onClick={() => {
+                        if (sanitizeId(item.id)) {
+                          navigate(`/movies/${item.id}`);
+                        } else {
+                          alert("Invalid movie ID detected!");
+                        }
+                      }}
+                    >
+                      Open
+                    </button>
+                  </div>
+                ))
+              ) : (
+                <Loader />
+              )}
             </div>
           </div>
           <div className="right-details"></div>
         </div>
       </Layout>
     </div>
   );
 };

 export default Movies;
