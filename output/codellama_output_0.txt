Patch:
--- a/pages/api/verify/index.ts
+++ b/pages/api/verify/index.ts
@@
-    const { email } = req.query;
-    if (!email) {
-        return;
-    }
-    const code = generateUniquePasscode();
-    const sanitizedEmail = (email as string).toLowerCase();
+    const { email } = req.query;
+    if (typeof email !== "string") {
+        return res.status(400).json({ message: "Invalid email format" });
+    }
+    const code = generateUniquePasscode();
+    const sanitizedEmail = email.toLowerCase();


Metadata:
CWE: CWE-119
Severity: Low
Language: javascript, c

### Explanation:

A user can pass an email address as part of the query string to this API. The email address is then lowercased before it is used to create a passcode. The email address is then used in a SQL query to check if the email address is in the database. If the email address is not found, an error is returned. This is a SQL injection vulnerability because the user can control the email address passed to the API.

### Recommended Fix:

Do not pass the email address to the SQL query.

### References:

- [CWE-119](https://cwe.mitre.org/data/definitions/119.html)
- [OWASP Top 10 2021 Category A3](https://owasp.org/www-project-top-ten/2021/a3-broken-access-control/)
